###################################################
#
#   The buildtools repository is at:
#   https://github.com/foo123/Beeld
#
###################################################

settings ={}
    Xpresion = "Xpresion::"
    RegExp = "RegExp::"
@

plugins =[{}]
    # include 'minify' plugin from plugins folder
    "minify" = "!plg:minify"
@

tasks =[{}]

    build_core =[{}]

        src =[]

            !tpl:umd-header-deps.tpl.js  # include a umd-header template
            # core classes (should be included always)
            ./src/FILTER.js
            ./src/core/Filter.js
            ./src/util/core.js
            ./src/core/Color.js
            ./src/core/Image.js
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/FILTER.js

        # Text replacements
        replace =[{}]

            "@@ROOT@@" = "'undefined' !== typeof self ? self : this"
            "@@VERSION@@" = "1.0.0"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@MODULE@@" = "FILTER"
            "@@DEPS@@"  = "Asynchronous"

        @

        out = ./build/filter.core.js

    @

    build_filters =[{}]

        src =[]

            # FILTER generic filters
            !tpl:umd-header-plugin.tpl.js  # include a umd-header template

            ./src/filters/header.js

            ./src/filters/CompositeFilter.js
            ./src/filters/AlgebraicFilter.js
            ./src/filters/BlendFilter.js
            ./src/filters/ColorTableFilter.js
            ./src/filters/ColorMatrixFilter.js
            ./src/filters/ColorMapFilter.js
            ./src/filters/AffineMatrixFilter.js
            ./src/filters/DisplacementMapFilter.js
            ./src/filters/GeometricMapFilter.js
            ./src/filters/ConvolutionMatrixFilter.js
            ./src/filters/MorphologicalFilter.js
            ./src/filters/StatisticalFilter.js
            ./src/filters/InlineFilter.js

            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/filters/header.js

        # Text replacements
        replace =[{}]

            "@@ROOT@@" = "'undefined' !== typeof self ? self : this"
            "@@VERSION@@" = "1.0.0"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@PLUGIN@@" = "FILTER_FILTERS"
            "@@MODULE@@" = "FILTER"

        @

        out = ./build/filter.filters.js

    @

    build_plugins =[{}]

        src =[]

            # sample FILTER Plugins
            !tpl:umd-header-plugin.tpl.js  # include a umd-header template

            ./src/plugins/header.js

            ./src/plugins/Noise.js
            ./src/plugins/PerlinNoise.js
            ./src/plugins/Gradient.js
            ./src/plugins/ChannelCopy.js
            ./src/plugins/Equalize.js # Intensity Equalize, Gray Equalize, RGB Equalize
            ./src/plugins/Pixelate.js # Rectangular Pixelate, Triangular Pixelate, Hexagonal Pixelate
            ./src/plugins/Halftone.js
            ./src/plugins/DropShadow.js
            ./src/plugins/Bokeh.js
            ./src/plugins/SeamlessTile.js
            ./src/plugins/FloodFill.js # optimised and extended FloodFill and PatternFill
            ./src/plugins/ConnectedComponents.js
            ./src/plugins/CannyEdges.js
            ./src/plugins/HaarDetector.js

            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/plugins/header.js

        # Text replacements
        replace =[{}]

            "@@ROOT@@" = "'undefined' !== typeof self ? self : this"
            "@@VERSION@@" = "1.0.0"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@PLUGIN@@" = "FILTER_PLUGINS"
            "@@MODULE@@" = "FILTER"

        @

        out = ./build/filter.plugins.js

    @

    minify_core =[{}]

        src =[]
            ./build/filter.core.js
        @

        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.core.min.js
    @

    minify_filters =[{}]

        src =[]
            ./build/filter.filters.js
        @


        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.filters.min.js
    @

    minify_plugins =[{}]

        src =[]
            ./build/filter.plugins.js
        @


        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.plugins.min.js
    @

    bundle =[{}]

        bundle =[]
            ./build/asynchronous.js
            ./build/filter.core.min.js
            ./build/filter.filters.min.js
            ./build/filter.plugins.min.js
        @

        out = ./build/filter.bundle.js
    @

    bundle_src =[{}]

        bundle =[]
            ./build/asynchronous.js
            ./build/filter.core.js
            ./build/filter.filters.js
            ./build/filter.plugins.js
        @

        out = ./build/filter.bundle.js
    @

@
